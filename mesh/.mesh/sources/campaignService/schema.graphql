schema {
  query: Query
  mutation: Mutation
}

type Campaign {
  """Feedback id"""
  _id: String!
  date: Date!
  invitations: [InvitationNoCampaign!]
  name: String!
  userId: Int!
}

type CampaignNoInvitation {
  """Feedback id"""
  _id: String!
  date: Date!
  name: String!
  userId: Int!
}

input CreateCampaignInput {
  date: Date!
  name: String!
  userId: Int!
}

input CreateInvitationBatchInput {
  accessible: Boolean!
  availability: Boolean!
  campaignId: ObjectID
  invokerId: Int!
  """Array of user that will receive the invitation"""
  receiverIds: [Int!]!
  surveyId: ObjectID!
}

input CreateInvitationInput {
  accessible: Boolean!
  availability: Boolean!
  campaignId: ObjectID
  invokerId: Int!
  receiverId: Int!
  surveyId: ObjectID!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

input FilteringInput {
  """Json string of filters to apply"""
  filter_by: JSON!
}

type Invitation {
  _id: String!
  accessible: Boolean!
  availability: Boolean!
  campaign: CampaignNoInvitation
  invokerId: Int!
  receiverId: Int!
  surveyId: String!
  token: String!
}

type InvitationNoCampaign {
  _id: String!
  accessible: Boolean!
  availability: Boolean!
  invokerId: Int!
  receiverId: Int!
  surveyId: String!
  token: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  consumeInvitation(token: String!): Session!
  createCampaign(createCampaignInput: CreateCampaignInput!): Campaign!
  createInvitation(createInvitationInput: CreateInvitationInput!): Invitation!
  createInvitations(createInvitationBatchInput: CreateInvitationBatchInput!): [Invitation!]!
  removeCampaign(id: String!): Campaign!
  removeInvitation(id: String!): Invitation!
  removeSession(id: String!): Session!
  updateCampaign(updateCampaignInput: UpdateCampaignInput!): Campaign!
  updateInvitation(updateInvitationInput: UpdateInvitationInput!): Invitation!
  updateSession(updateSessionInput: UpdateSessionInput!): Session!
}

"""
A field whose value conforms with the standard mongodb object ID as described here: https://docs.mongodb.com/manual/reference/method/ObjectId/#ObjectId. Example: 5e5677d71bdc2ae76344968c
"""
scalar ObjectID

input PaginationInput {
  """number of element per page."""
  nbElement: Int!
  """Page of number."""
  page: Int!
}

type Query {
  campaign(id: String!): Campaign!
  campaigns(filter: FilteringInput, pagination: PaginationInput, sort: SortingInput): [Campaign!]!
  invitation(id: String!): Invitation!
  invitations(filter: FilteringInput, pagination: PaginationInput, sort: SortingInput): [Invitation!]!
  session(id: String!): Session!
  sessions(filter: FilteringInput, pagination: PaginationInput, sort: SortingInput): [Session!]!
}

type Response {
  order: Int!
  timeSpentUnit: ResponseTime!
  value: [String!]!
}

type ResponseGroup {
  order: Int!
  responses: [Response!]!
}

input ResponseGroupInput {
  order: Int!
  responses: [ResponseInput!]!
}

input ResponseInput {
  order: Int!
  timeSpentUnit: ResponseTimeInput!
  value: [String!]!
}

type ResponseTime {
  timeSpentUnit: ResponseTimeUnit!
  timeSpentValue: Int!
}

input ResponseTimeInput {
  timeSpentUnit: ResponseTimeUnit!
  timeSpentValue: Int!
}

enum ResponseTimeUnit {
  MINUTES
  SECONDS
}

union ResponseUnion = Response | ResponseGroup

type Session {
  _id: String!
  invokerId: Int!
  receiverId: Int!
  responses: [ResponseUnion!]!
  status: SessionStatus!
  survey: JSON!
}

enum SessionStatus {
  ABANDONNED
  ACTIVE
  DONE
  ORPHENED
  PAUSED
}

input SortingInput {
  """Json string of field to sort by. value must be ASC or DESC"""
  sort_by: JSON!
}

input UpdateCampaignInput {
  _id: String!
  date: Date
  invitationsId: [ObjectID!]
  name: String
  userId: Int
}

input UpdateInvitationInput {
  _id: String!
  accessible: Boolean!
  availability: Boolean!
  campaignId: ObjectID
}

input UpdateSessionInput {
  _id: String!
  invokerId: Int
  receiverId: Int
  responses: [ResponseInput!]
  responsesGroup: [ResponseGroupInput!]
  status: SessionStatus
}