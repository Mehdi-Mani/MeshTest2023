schema {
  query: Query
  mutation: Mutation
}

"""Company public information"""
type Company {
  """UserId that take care of this company"""
  RepresentedBy: Int!
  """Id of the company"""
  _id: String!
  contactInfo: ContactInfoType
  """description of the company"""
  description: String!
  domains: [Domain]
  """Date of the fondation of the company"""
  fondationDate: Date!
  """Name of the company"""
  name: String!
}

type ContactInfoType {
  _id: String!
  """Country code using ISO 3166-1 Alpha-2"""
  countryCode: CountryCode
  fax: String
  phoneNumbers: [PhoneNumber]
  publicEmails: [EmailAddress]
  """Field representing Company ID"""
  refCompany: String
  """Field representing User ID"""
  refUser: Int
}

"""A country code as defined by ISO 3166-1 alpha-2"""
scalar CountryCode

input CreateCompanyInput {
  """UserId that take care of this company"""
  RepresentedBy: Int!
  contactInfo: CreateContactInfoCompanyInputNullable
  """description of the company"""
  description: String!
  domains: [CreateDomainInput]
  """Date of the fondation of the company"""
  fondationDate: DateTime! = "2023-03-02T22:11:12.579Z"
  """Name of the company"""
  name: String!
}

input CreateContactInfoCompanyInput {
  """Country code using ISO 3166-1 Alpha-2"""
  countryCode: CountryCode!
  fax: String
  phoneNumbers: [PhoneNumber]
  publicEmails: [EmailAddress]
  """Field representing Company ID"""
  refCompany: String!
}

input CreateContactInfoCompanyInputNullable {
  """Country code using ISO 3166-1 Alpha-2"""
  countryCode: CountryCode!
  fax: String
  phoneNumbers: [PhoneNumber]
  publicEmails: [EmailAddress]
}

input CreateContactInfoUserInput {
  """Country code using ISO 3166-1 Alpha-2"""
  countryCode: CountryCode!
  fax: String
  phoneNumbers: [PhoneNumber]
  publicEmails: [EmailAddress]
  """Field representing Company ID"""
  refUser: Int!
}

input CreateDomainInput {
  """color used to represent this domain"""
  color: HexColorCode!
  """name of the domain"""
  name: String!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Domain/Field company works in"""
type Domain {
  """Id of the company"""
  _id: String!
  """color used to represent this domain"""
  color: HexColorCode!
  """name of the domain"""
  name: String!
}

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress

"""
A field whose value is a hex color code: https://en.wikipedia.org/wiki/Web_colors.
"""
scalar HexColorCode

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  createCompany(createCompanyInput: CreateCompanyInput!): Company!
  createContactInfoForCompany(createContactInfoCompanyInput: CreateContactInfoCompanyInput!): ContactInfoType!
  createContactInfoForUser(createContactInfoUserInput: CreateContactInfoUserInput!): ContactInfoType!
  createDomain(createDomainInput: CreateDomainInput!): Domain!
  removeCompany(id: String!): Company!
  removeContactInfo(id: String!): ContactInfoType!
  removeDomain(id: String!): Domain!
  updateCompany(updateCompanyInput: UpdateCompanyInput!): Company!
  updateContactInfo(updateContactInfoInput: UpdateContactInfoInput!): ContactInfoType!
  updateDomain(updateDomainInput: UpdateDomainInput!): Domain!
}

"""
A field whose value conforms to the standard E.164 format as specified in: https://en.wikipedia.org/wiki/E.164. Basically this is +17895551234.
"""
scalar PhoneNumber

type Query {
  companies(sortedPaginatedInput: SortedPaginatedFiltredInput): [Company!]!
  company(id: String!): Company!
  contactInfo(id: String!): ContactInfoType!
  contactInfos(sortedPaginatedFiltredInput: SortedPaginatedFiltredInput): [ContactInfoType!]!
  domain(id: String!): Domain!
  domains(sortedPaginatedInput: SortedPaginatedFiltredInput): [Domain!]!
}

input SortedPaginatedFiltredInput {
  """Json string of filters to apply"""
  filter_by: JSON = null
  """number of element per page. default 5"""
  nbElement: Int = -1
  """Page of number. default 1"""
  page: Int = 1
  """Json string of field to sort by. value must be ASC or DESC"""
  sort_by: JSON = null
}

input UpdateCompanyInput {
  """UserId that take care of this company"""
  RepresentedBy: Int
  contactInfo: CreateContactInfoCompanyInputNullable
  """description of the company"""
  description: String
  domains: [CreateDomainInput!]
  """Date of the fondation of the company"""
  fondationDate: DateTime = "2023-03-02T22:11:12.579Z"
  id: String!
  """Name of the company"""
  name: String
}

input UpdateContactInfoInput {
  _id: String!
  """Country code using ISO 3166-1 Alpha-2"""
  countryCode: CountryCode
  fax: String
  phoneNumbers: [PhoneNumber!]
  publicEmails: [EmailAddress!]
}

input UpdateDomainInput {
  """Id of the company"""
  _id: String!
  """color used to represent this domain"""
  color: HexColorCode
  """name of the domain"""
  name: String
}